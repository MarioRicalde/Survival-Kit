// Survival ✚ Kit

// Survey Styling
// @todo Redo this module.
// Code:
// <form action="#" id="encuesta" class="widget" accept-charset="utf-8">
//   <h3>Encuesta</h3>
//   <div><strong>¿Te gusta el nuevo sitio?</strong></div>
//   <div><input name="opt1" id="opt1" type="radio"> Si me gusta</div>
//   <div><input name="opt2" id="opt2" type="radio"> No me gusta</div>
//   <div><a href="#" class="button">Votar</a></div>
// </form>
@mixin survey {
  strong {
    padding:10px;
    display:block;
    font-size:14px;
    color: $font-color;
  }
  div {
    padding-left:5px;
    font-size:14px;
    input {
      vertical-align:top;
    }
    .button {
      @include button;
    }
  }
}

// Facebook-like search box.
// @todo include the missing search image.
// Code:
// <div class="search-box">
//   <div class="shadow">
//     <span class="input">
//       <input name="q" onblur="if(this.value==&quot;&quot;)this.value=&quot;Buscar&quot;;" onfocus="if(this.value==&quot;Buscar&quot;) this.value=&quot;&quot;;" size="15" type="text" value="Buscar" />
//     </span>
//     <span class="button"><input name="sa" type="submit" value="" /></span>
//   </div>
// </div>
@mixin facebook-search-box($size:300px, $border: #BAC6D7, $light: #e9eef1) {
  border: 1px solid $border;
  height:20px;
  width:$size;
  .shadow {
    background:#fff;
    border-top:1px solid $light;
    height:18px;
    padding-top:1px;
  }
  span {
    font-size:11px;
    line-height:11px;
  }
  input {
    font-size:11px;
    border:0;
    outline:none;
  }
  .input input {
    padding: 2px 4px 2px 6px;
    float:left;
    color:#777777;
    width:$size - 36px;
  }
  .button input {
    float:right;
    cursor:pointer;
    text-indent:-99999px;
    display: block;
    background:transparent image-url('search-icon-fb.png') left top no-repeat;
    width:21px;
    height:17px;
  }
}

// A simple search box, generic.
// If $width contains a second argument, it won't output the width to the parent element, allowing you to use box-size.
//
// <form action="#" accept-charset="utf-8" class="search-box">
//   <input type="text" class="text" value="Search..." name="q" />
//   <input type="submit" class="button" value="" />
// </form>
@mixin search-box-simple($width:189px, $background: #FFFFFF, $font-size:12px) {
  // Here Begins
  $button-width: 24px;

  // Calculate the height based on the given font-size.
  // The multiplier will make it so there's a sexy veritcal spacing.
  $height: $font-size * 2;
  background:$background;
  // IF you pass a second parameter to width, it won't output the width.
  @if length($width) == 1 {
    height:$height;
    width:$width;
  } @else {
    $width: nth($width, 1);
  }

  input {
    font-size:$font-size;
    border:0;
    outline:none;
  }
  .text {
    $padding: 10px;
    padding:0 $padding 0 $padding;
    float:left;
    color:#777777;
    width:$width - $button-width - ($padding * 2) - 6px;
    line-height:$height;
    height:$height;
  }
  .button {
    float:right;
    cursor:pointer;
    text-indent:-99999px;
    display: block;
    width:$button-width;
    height:$height;
    background:transparent image-url('vendor/survival-kit/search-icon.png') left center no-repeat;
  }
}

// Facebook Style Button.
//
// <div class="button"><label><input value="Post" type="submit"></label></div>
//
// @param $color the color of the button.
// @param $background-color the color of the background; this is used to calculate the shadow.
// @param $padding the size of the button with padding.
@mixin facebook-button($color:#617AAC, $background-color:#FFFFFF, $padding: 4px 10px) {
  &:active {
    @if $background-color != false {
      border-bottom:1px solid darken($background-color,5);
    }
  }
  font-size:11px;
  @if $background-color != false {
    border-bottom:1px solid darken($background-color,10);
  }
  @include inline-block;
  label,span {
    border:1px solid darken($color,14);
    @include inline-block;
    input:active {
      background:darken($color, 5);
      border-top:1px solid darken($color, 5);
    }
    input,a {
      @include no-mp;
      padding:$padding;
      font: normal normal normal 12px/normal Arial, Helvetica, sans-serif;
      font-weight:bold;
      cursor:pointer;
      color:lighten($color, 95);
      border:0;
      border-top:1px solid lighten($color,14);
      border-bottom:1px solid $color;
      background:$color;
    }
  }
}




// Inputs.
$input-shadow           : inset 0 1px 2px rgba(0, 0, 0, 0.1), 0 1px 0 rgba(255, 255, 255, 0.2) !default;
$input-hover-color      : #7DBEF1 !default;
$input-hover-shadow     : 0 0 6px #7DBEF1 !default;

//
// Adds the Input state effects
//
@mixin input-effects() {
  @if $input-shadow { @include box-shadow($input-shadow); }
  border:1px solid #CCCCCC;
  outline: 0;
  &:focus {
    @if $input-hover-shadow {
      @include box-shadow($input-hover-shadow);
    }
    border:1px solid $input-hover-color;
  }
}

//
// Forms Styles (Survival Kit)
// This styles are meant to be used with Simple_Forms (Rails)
// Usage:
// simple-forms(default, option-1 option2)
// Options:
//    block-hints : display the hints right after the inut field.
@mixin simple-forms($selector : "simple_form", $opts:false) {
  $size-modifier          : 0px;
  $input-width            : 300px;
  $input-font-size        : $base-font-size + $size-modifier;
  $vertical-spacing       : 7px;
  $horizontal-spacing     : 10px;
  $label-width            :148px;

  // 7px                  = base padding at 0 size modifier.
  $vertical-field-padding : floor((7px + $size-modifier) + ($size-modifier / 4.4) * 2);

  // Colors.
  $hint-color             : #6E6E6E;

  @if $selector == auto or $selector == default {
    $selector: 'simple_form';
  }

  // Force $opts into a list goddamnit.
  $opts: join($opts, herp derp);

  .#{$selector} {
    @include debug;
    & > .hint {
      @include debug(green);
      padding:$vertical-field-padding 0;
      display:inline-block;
      &.padded {
        margin-left:$horizontal-spacing * 2;
      }
    }

    p {
      padding:$vertical-field-padding 0;
      margin:$vertical-spacing;
    }

    // Fix a issue with the spacing.
    input.date {
      label {
        width: 145px !important;
      }
    }

    label {
      @include debug(green);
      width:$label-width;
      vertical-align:middle; // double line labels.
      display:inline-block;  // works with already inline displayed items.
      margin:0 $horizontal-spacing 0 0;
      padding: $vertical-field-padding 0;
      line-height:$input-font-size + ($input-font-size * 0.26);
      text-align: right;
      abbr {
        @include debug(yellow);
        @if index($opts, no-stars) {
          display:none;
        } @else {
          color:#E62500;
          float: right;
          margin-left: $horizontal-spacing;
        }
      }
      &.boolean { width: auto; }
    }

    .ext-sfr {
      @include debug(yellow);
      display: inline-block;
      width: 184px;
      vertical-align: middle;
    }

    .input {
      @include debug(blue);
      padding:$vertical-spacing 0;
      .hint {
        @extend .ext-sfr;
        // Block Hints.
        @if index($opts, block-hints) {
          display: block;
          width: 342px;
          padding: 2px 0 0 145px;
          font-size: 11px;
          color: #8A8A8A;
        } @else {
          margin-left:$horizontal-spacing;
          color: $hint-color;
        }
      }
    }

    select {
      border:1px solid #CCCCCC;
      outline:none;
      // floor(Font Size * Line Height) + (Vertical Input Padding * 2) + 1px)
      $calc: floor(($input-font-size * $base-line-height ) + ($vertical-field-padding * 2)) + (1px);
      height: $calc + 1px;
      padding:(6px + $size-modifier) * $base-line-height ;
      &:focus {
        border:1px solid $input-hover-color;
      }
    }

    // Needs to be nested so it doesn't collide with date selects.
    .select select {
      width:$input-width + ($vertical-field-padding * 2);
    }

    textarea, input[type=text], input[type=password], input[type=email] {
      font-size:$input-font-size;
      padding: $vertical-field-padding 6px;
      vertical-align:top;
      width:$input-width;
      // Input Effects
      @include input-effects;
    }

    textarea {
      max-width:$input-width;
      height:80px;
    }

    input {
      &.check_boxes, &.radio, &.boolean {
        vertical-align:middle;
        margin-right:$horizontal-spacing;
      }
    }

    .submit {
      padding-left: $label-width + $horizontal-spacing;
    }

    // Simple Form Button for the forms.
    .button {
      @extend .sk-button;
    }


    // Errors @todo: this should be in its own section.
    span.error, .error {
      @extend .ext-sfr;
      color: #D65C5C;
      font-size: 12px;
      margin-left: 10px;
    }

    #error_explanation {
      background: #FFEBD6;
      padding: 10px 14px;
      border: 1px solid #FFB36C;
      margin:$vertical-spacing * 4 0;
      color:#895334;
      @include box-shadow(#D4D4D4 0 0 10px);
      h2 {
        @include header-size(18px);
        color:#AE4910;
        margin-top:0;
      }
    }


      // Colors for form validity
    input:valid, textarea:valid   {}

    input:invalid, textarea:invalid {
      $error-color: #FF6161;
      box-shadow:$input-shadow, inset -7px 0px 0px lighten($error-color, 15%) !important;
      &:focus {
        @if $input-hover-shadow {
          @include box-shadow($input-hover-shadow, inset -7px 0px 0px $error-color !important );
        }
      }
    }
  }


  // Make this compatible when you have no javascript loaded!
  @if not index($opts, js-only) {
    .no-js {
      $hint-width:148px;
      label {
        width:$hint-width;
      }
      label.boolean {
        width:auto;
      }
      @if index($opts, block-hints) {
        .input .hint {
          padding-left:$hint-width + $horizontal-spacing;
        }
      }
      .actions {
        margin:10px 0 10px ($hint-width + $horizontal-spacing);
      }

    }
  }
}

// Allows you to have different widths for different layouts.
@mixin simple-form-width($width, $label-width:false) {
  $input-width            : $width;
  $horizontal-spacing     : 3px;
  $vertical-field-padding : $horizontal-spacing * 2;

  textarea, input[type=text], input[type=password] {
    width:$width;
  }
  select {
    width:$input-width + ($vertical-field-padding * 2);
  }
  @if $label-width {
    .input .hint {
      width:$label-width;
    }
  }
}
